# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- practice

pool:
  vmImage: ubuntu-latest

steps:
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'sonarqube'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'manual_lms-pipeline_lms-project-manual_AYmIszLysvnv6LmunO3Z'
    cliProjectName: 'lms-project-manual'
    cliSources: '.'

- task: SonarQubeAnalyze@5
  inputs:
    jdkversion: 'JAVA_HOME_11_X64'

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: 'api'
    verbose: true

- task: CmdLine@2
  displayName: Run Test Cases
  inputs:
    script: |
      cd api
      npm run test || exit 1

- task: Docker@2
  inputs:
    containerRegistry: 'lms-acr-connection'
    repository: 'lms-backend-manual'
    command: 'buildAndPush'
    Dockerfile: '**/api/Dockerfile'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Free Trial(578d2586-632c-471a-9870-5a360ac4682b)'
    appType: 'webAppContainer'
    WebAppName: 'lmswebappbackend'
    DockerNamespace: 'lmspipelineacr.azurecr.io'
    DockerRepository: 'lms-backend-manual'
    DockerImageTag: '$(Build.BuildId)'